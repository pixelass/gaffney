{"version":3,"sources":["../src/index.js"],"names":["trig1","year","month","day","JULIAN_DAY","K0","T","T2","T3","J0","F0","M0","M1","B1","oldJ","jDay","phase","f","M5","M6","B6"],"mappings":";;;;;;AAAA;;AAMA;;;;;;AAEA,IAAMA,QAAQ,SAARA,KAAQ,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,EAAsB;AAClC,MAAMC,aAAa,yBAAUH,IAAV,EAAgBC,KAAhB,EAAuBC,GAAvB,CAAnB;AACA,MAAME,KAAK,kBAAM,CAACJ,OAAO,IAAR,IAAgB,OAAtB,CAAX;AACA,MAAMK,IAAI,CAACL,OAAO,MAAR,IAAkB,GAA5B;AACA,MAAMM,KAAKD,IAAIA,CAAf;AACAE,OAAKF,IAAIA,CAAJ,GAAQA,CAAb;AACA,MAAMG,KAAK,UAAU,KAAKJ,EAA1B;AACA,MAAMK,KACJ,YAAYH,EAAZ,GACA,cAAcC,EADd,IAEC,UAAU,aAAaH,EAFxB,KAGC,WAAWC,CAAX,GAAe,WAAWC,EAH3B,CADF;AAKA,MAAMI,KACJ,MAAM,wBAAGN,KAAK,aAAR,CAAN,GAA+B,QAA/B,GAA0C,YAAYE,EAAtD,GAA2D,aAAaC,EAD1E;AAEA,MAAMI,KACJ,MAAM,wBAAGP,KAAK,aAAR,CAAN,GAA+B,QAA/B,GAA0C,YAAYE,EAAtD,GAA2D,aAAaC,EAD1E;AAEA,MAAMK,KACJ,MAAM,wBAAGR,KAAK,aAAR,CAAN,GAA+B,OAA/B,GAAyC,YAAYE,EAArD,GAA0D,aAAaC,EADzE;AAEA,MAAIM,aAAJ;AACA,MAAIC,OAAO,CAAX;AACA,MAAIC,QAAQ,CAAZ;AACA,SAAOD,OAAOX,UAAd,EAA0B;AACxB,QAAIa,IAAIP,KAAK,WAAWM,KAAxB;AACA,QAAME,KAAK,4BAAIP,KAAKK,QAAQ,WAAjB,CAAX;AACA,QAAMG,KAAK,4BAAIP,KAAKI,QAAQ,YAAjB,CAAX;AACA,QAAMI,KAAK,4BAAIP,KAAKG,QAAQ,YAAjB,CAAX;AACAC,SAAK,SAAS,gBAAIE,EAAJ,CAAT,GAAmB,CAAC,SAAS,WAAWb,CAArB,IAA0B,gBAAIY,EAAJ,CAAlD;AACAD,SAAK,SAAS,gBAAI,IAAIE,EAAR,CAAT,GAAuB,SAAS,gBAAI,IAAIC,EAAR,CAArC;AACAH,SAAK,SAAS,gBAAIC,KAAKC,EAAT,CAAT,GAAwB,SAAS,gBAAID,KAAKC,EAAT,CAAtC;AACAF,SAAK,SAAS,gBAAI,IAAIC,EAAR,CAAT,GAAuB,QAAQ,gBAAI,IAAIE,EAAJ,GAASD,EAAb,CAApC;AACAF,SAAK,MAAM,IAAX;AACAH,WAAOC,IAAP;AACAA,WAAON,KAAK,KAAKO,KAAV,GAAkB,kBAAMC,CAAN,CAAzB;AACAD;AACD;AACD,SAAO,CAACZ,aAAaU,IAAd,IAAsB,EAA7B;AACD,CApCD;;kBAsCed,K","file":"index.js","sourcesContent":["import {\n  floor,\n  sin,\n  getFraction as fr,\n  degreeToRadians as rad\n} from '@gaffney/utils'\nimport julianDay from '@gaffney/julian-day'\n\nconst trig1 = (year, month, day) => {\n  const JULIAN_DAY = julianDay(year, month, day)\n  const K0 = floor((year - 1900) * 12.3685)\n  const T = (year - 1899.5) / 100\n  const T2 = T * T\n  T3 = T * T * T\n  const J0 = 2415020 + 29 * K0\n  const F0 =\n    0.0001178 * T2 -\n    0.000000155 * T3 +\n    (0.75933 + 0.53058868 * K0) -\n    (0.000837 * T + 0.000335 * T2)\n  const M0 =\n    360 * fr(K0 * 0.08084821133) + 359.2242 - 0.0000333 * T2 - 0.00000347 * T3\n  const M1 =\n    360 * fr(K0 * 0.07171366128) + 306.0253 + 0.0107306 * T2 + 0.00001236 * T3\n  const B1 =\n    360 * fr(K0 * 0.08519585128) + 21.2964 - 0.0016528 * T2 - 0.00000239 * T3\n  let oldJ\n  let jDay = 0\n  let phase = 0\n  while (jDay < JULIAN_DAY) {\n    let f = F0 + 1.530588 * phase\n    const M5 = rad(M0 + phase * 29.10535608)\n    const M6 = rad(M1 + phase * 385.81691806)\n    const B6 = rad(B1 + phase * 390.67050646)\n    f -= 0.4068 * sin(M6) + (0.1734 - 0.000393 * T) * sin(M5)\n    f += 0.0161 * sin(2 * M6) + 0.0104 * sin(2 * B6)\n    f -= 0.0074 * sin(M5 - M6) - 0.0051 * sin(M5 + M6)\n    f += 0.0021 * sin(2 * M5) + 0.001 * sin(2 * B6 - M6)\n    f += 0.5 / 1440\n    oldJ = jDay\n    jDay = J0 + 28 * phase + floor(f)\n    phase++\n  }\n  return (JULIAN_DAY - oldJ) % 30\n}\n\nexport default trig1\n"]}