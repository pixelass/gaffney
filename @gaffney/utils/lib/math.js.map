{"version":3,"sources":["../src/math.js"],"names":["PI","Math","cos","sin","floor","ceil","round","min","max","abs","getFraction","number","degreeToRadians","degree","parseInteger","radix","parseInt","leftPad","num","len","substr","math"],"mappings":";;;;;IAAOA,E,GAAmDC,I,CAAnDD,E;IAAIE,G,GAA+CD,I,CAA/CC,G;IAAKC,G,GAA0CF,I,CAA1CE,G;IAAKC,K,GAAqCH,I,CAArCG,K;IAAOC,I,GAA8BJ,I,CAA9BI,I;IAAMC,K,GAAwBL,I,CAAxBK,K;IAAOC,G,GAAiBN,I,CAAjBM,G;IAAKC,G,GAAYP,I,CAAZO,G;IAAKC,G,GAAOR,I,CAAPQ,G;;;AAEnD,IAAMC,cAAc,SAAdA,WAAc,SAAU;AAC5B,SAAOC,SAASP,MAAMO,MAAN,CAAhB;AACD,CAFD;;AAIA,IAAMC,kBAAkB,SAAlBA,eAAkB,SAAU;AAChC,SAAOZ,KAAK,GAAL,GAAWa,MAAlB;AACD,CAFD;;AAIA,IAAMC,eAAe,SAAfA,YAAe,CAACH,MAAD;AAAA,MAASI,KAAT,uEAAiB,EAAjB;AAAA,SAAwBC,SAASL,MAAT,EAAiBI,KAAjB,CAAxB;AAAA,CAArB;;AAEA,IAAME,UAAU,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAc,CAAC,aAAaD,GAAd,EAAmBE,MAAnB,CAA0BD,MAAM,CAAC,CAAjC,CAAd;AAAA,CAAhB;;AAEA,IAAME,OAAO;AACXrB,QADW;AAEXE,UAFW;AAGXC,UAHW;AAIXC,cAJW;AAKXC,YALW;AAMXC,cANW;AAOXC,UAPW;AAQXC,UARW;AASXC,UATW;AAUXQ,kBAVW;AAWXL,kCAXW;AAYXF,0BAZW;AAaXI;AAbW,CAAb;;QAiBEd,E,GAAAA,E;QACAE,G,GAAAA,G;QACAC,G,GAAAA,G;QACAC,K,GAAAA,K;QACAC,I,GAAAA,I;QACAC,K,GAAAA,K;QACAC,G,GAAAA,G;QACAC,G,GAAAA,G;QACAC,G,GAAAA,G;QACAQ,O,GAAAA,O;QACAL,e,GAAAA,e;QACAF,W,GAAAA,W;QACAI,Y,GAAAA,Y;kBAGaO,I","file":"math.js","sourcesContent":["const {PI, cos, sin, floor, ceil, round, min, max, abs} = Math\n\nconst getFraction = number => {\n  return number - floor(number)\n}\n\nconst degreeToRadians = degree => {\n  return PI / 180 * degree\n}\n\nconst parseInteger = (number, radix = 10) => parseInt(number, radix)\n\nconst leftPad = (num, len) => ('00000000' + num).substr(len * -1)\n\nconst math = {\n  PI,\n  cos,\n  sin,\n  floor,\n  ceil,\n  round,\n  min,\n  max,\n  abs,\n  leftPad,\n  degreeToRadians,\n  getFraction,\n  parseInteger\n}\n\nexport {\n  PI,\n  cos,\n  sin,\n  floor,\n  ceil,\n  round,\n  min,\n  max,\n  abs,\n  leftPad,\n  degreeToRadians,\n  getFraction,\n  parseInteger\n}\n\nexport default math\n"]}